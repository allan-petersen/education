Filter based Authentication and Aithorization framework
Spring Security also is a web-based exploit prvention
CRSF - Corss-Site Request Forgery
Encrypted secure headers and TLS support

Provides Jakarta EE (previously J2EE) application security services

Authentication Support
======================
HTTP basic and digest, x509 and form-based authentication.
LDAP and Active Directory
OpenId, Jasig CAS (Central Authentication Service) - Single Sign ON- and JAAS 
OAuth and OAuth2, OpenID
Kerberos and SAML

Authorization Support
=====================
Web Request
Method invocation
Domain object access control

Basic Authentication
====================
Passwords
Use a cryptographically sound one-way hash.
Sha 256 is no longer considred secure.

BCrypt

Install Spring CLI. TODO
spring encodepassword password

Athorization
============
WebErrorController implements Errorcontroller

Form-based authentication
=========================
Create login form-based
Implement controller and wiring
Turn it on and test

LDAP for Authentication
=======================
spring-security-ldap

Internal LDAP
=============
Use Embedded LDAP
OpenLDAP
LDAP built into the OS

AD is not LAP, but AD can use LDAP for authentication (through an LDAP API)

Spring LDAP
===========
LADP Use Cases:

Authentication
Not all uses og LADP re securiy related - use spring-ldap-core project
Not always security focused

LDAP Operations
- Query LADP (filters) Use the LDAP template
- Search and Dynamic DN creation
-- Binding, update, delete

Other tree-structured data

Active Directory (AD) vs. LDAP for autentication
================================================
ADFS - SAML based
Active Directory is not LDAP
AD implemnts an LDAP API
AD is much more than LDAP itself.

Directoy Srvices is exposed by AD Lightweight
Directory Services (AD LDS) as an LDAP interface

Authentication with AD
======================
- Uses standard and non standard methods
- Configuration should be very familiar (with LDAP), however
- Nested groups - > SEC-1823 -- does ot work in Spring Security

Authentication Provider
- ActiveDirectoryLdapAutenticationProvider
- Utilized via configure method of WebSecuriyConfigurationAdapter

Introduction to OAuth2
======================
Resource owner - often the user. 
	Yy profile data in Goole would be the resource - the data being protected
	But Goole is the owner
Client - The application requesting access
Resource server - posts protected data and accounts
Autorization server - service that grans tokens

Token types
===========
Access token - the secret and often short-lived token, that identifes a user
Refresh token - longer-lived token used to renew access token, when it expires
Scopes provide for right associated with the access token

Grant types
===========
Several grant types that impact flows
1. Authorizazation code grant is most common (Facebook, Twitter etc.) - Grant access to someone else on your behalf.
2. Implicit grant is common in web apps and mobile apps, where the security of that access token cannot be maintained. Often, these cdont't come with refresh tokens.
And they ere very specific to the function of the application being granted access.
3. Client credentials grant is useful insystem-to-system communications. Each system gets a client ID and a secret, that the system uses to get an access token.

OAuth2 and Spring
=================
CommonOAuth2Prrovider - Native support for Okta, Goodle, Githus and Facebook.
- that are common OAuth Providers. We will use Github.
Property-based configuration in Spring Boot
Client-side OAuth integration
It allows yoy to provide third-party support for the log in operations,
so you don't have to keep that information in your sight, which is very attractive to a lot of companies,
that don't want to mannage the overhead of bringing the authentication in, because after all,
when the authentications leaks, that tends to make the news.

1. Authorization server
=======================
One of the ext pieces, you might work with, is the Autohrization Server itself.
This is something, that you woul do, if you are going to run yooyr authorization service for service-to-service calls.
This is what provides authorization services to the system and authentication services to the system as a whole.

Many companies, companies that I have worked for choose to have your own internal authorization server,
and provide a utility to not olny mobile apllications, but also to internal services.

Creating the authorization service really is as simple as using an annotation 

@EnableAuthorizationServer
AuthorizationServerConfigurerAdapter used to configure it.
Support various grant types.

2. Resource Server
==================







	























































Other courses
=============
Spring Spring Security
